.group-header-cell {
  @apply w-[35%] min-w-[26.74rem] bg-bus py-2 px-5 text-white;
}

.group-header-cell-content {
  @apply flex h-full w-full justify-between;
}

.group-header-cell .left {
  @apply relative flex items-center justify-center gap-2;
}

.group-header-cell .right {
  @apply flex flex-col;
}

.group-header-cell .right span:last-child {
  @apply font-normal;
}

.group-cell {
  @apply min-h-[var(--table-cell-width)] min-w-[var(--table-cell-width)] bg-bus py-2 px-1 align-text-top text-white;
}

.group-cell span {
  @apply block translate-x-[-15%] font-light;
}

.project-header-cell {
  /* setting max-width: 1rem will cause the table head to not grow bigger than the group table header */
  @apply max-w-[1rem] border-b-[0.05rem] border-l-[0.05rem] border-r-[0.05rem] border-bus-m py-1 px-5;
}

.project-header-cell-container {
  /* setting max-width: 1rem will cause the table head to not grow bigger than the group table header */
  @apply flex w-full justify-between;
}

.project-header-cell .project-left-icons-container {
  @apply flex items-center gap-2 pr-2;
}

.project-header-cell .project-name-container {
  @apply flex w-[65%] items-center gap-2 overflow-hidden pr-4 text-left font-normal;
}

.project-header-cell .project-name-button {
  @apply max-w-[100%] overflow-hidden overflow-ellipsis text-sm;
}

.project-header-cell .project-right-icons-container {
  @apply flex w-[35%] items-center justify-between;
}

.table-input input {
  @apply absolute bottom-0 -top-6 left-[0.65rem] !h-11 !w-[80%] cursor-pointer !rounded-sm  text-center !text-sm font-light;
}

.project-cell {
  @apply relative border-b-[0.05rem] border-bus-m bg-bus-l;
}

.project-cell.plan {
  box-shadow: inset 0 -4px 0 var(--color-black-80);
  @apply bg-white;
}

.project-cell.con {
  box-shadow: inset 0 -4px 0 var(--color-copper);
  @apply bg-white;
}

/* add a left border to cell with the none-class after the last colored cell */
.con + .none,
.plan + .none,
.overlap + .none {
  border-left: 2px solid var(--color-black-20);
}

/* add a left border to a colored cell if it's the first colored cell */
.none + .plan,
.none + .con,
.none + .overlap {
  border-left: 2px solid var(--color-black-20);
}

/* add a left border to an ACTIVE cell with the none-class after the last colored cell */
tr.active .con + .none,
tr.active .plan + .none,
tr.active .overlap + .none {
  border-left: 3px solid var(--color-black-70);
}

/* add a left border to a colored ACTIVE cell if it's the first colored cell */
tr.active .none + .plan,
tr.active .none + .con,
tr.active .none + .overlap {
  border-left: 3px solid var(--color-black-70);
}

/* creates a border bottom with both planning and construction colors with the :before effect */
.project-cell.overlap {
  box-shadow: inset 0 -4px 0 var(--color-copper);
  @apply relative bg-white;
}

.project-cell.overlap:before {
  box-shadow: inset 0 -4px 0 var(--color-black-80);
  @apply absolute bottom-0 left-0 h-[4px] w-[50%] content-[''];
}

.edit-timeline-button {
  @apply absolute z-[999] hidden h-[0.9rem] w-[0.7rem] -translate-x-2 -translate-y-2 rounded-[1px] bg-[var(--color-black-70)];
}

tr.active .edit-timeline-button {
  @apply inline-block;
}

.project-cell .edit-timeline-button svg {
  @apply h-4 w-4 translate-x-[-2px] translate-y-[-3px] text-white;
}

.edit-timeline-button.right {
  @apply right-0 translate-x-[0.4rem];
}

.edit-timeline-button.right svg {
  @apply rotate-180;
}
